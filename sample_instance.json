{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 1/10\n        - Number of enemies: 4\n        - Number of barriers: 6\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters. Total number of 'B's in the map = 6 + 76.\n        2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n        3. 4 enemies 'E' placed strategically\n        4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n        5. The level should be challenging but fair for difficulty 1\n        6. the two corner barriers in each row Barrier 'B' must be accounted inside20x20. Therefore,\n        row length = 20. The same is with the height.\n        7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move\n\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB..................B\nB...E..............B\nB.................EB\nB........B.........B\nB...B..............B\nB.......E..........B\nB..................B\nB...........B......B\nB.....B............B\nB.................EB\nB.........B........B\nB..................B\nB......E...........B\nB.P................B\nB..........B.......B\nB..................B\nB........B.........B\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
{"prompt": "\n        Create a game level map for a top-down 2D game with the following specifications:\n        - Map size: 20x20 tiles\n        - Level difficulty: 2/10\n        - Number of enemies: 6\n        - Number of barriers: 9\n\n        Use these symbols:\n        - 'B' for barriers/walls\n        - 'E' for enemies\n        - 'P' for player (place at a strategic position)\n        - '.' for empty walkable spaces\n\n        The map should have:\n        1. A border made of 'B' characters. Total number of 'B's in the map = 9 + 76.\n        2. The player 'P' placed in a good starting position. Exactly one 'P' must be in the map. Not more, not less.\n        3. 6 enemies 'E' placed strategically\n        4. Use extra Barriers 'B' to place them inside the walls in interesting paths\n        5. The level should be challenging but fair for difficulty 2\n        6. the two corner barriers in each row Barrier 'B' must be accounted inside20x20. Therefore,\n        row length = 20. The same is with the height.\n        7. The player 'P' must be able to move. Do not put inner 'B' blocks the way he cannot move\n\n        Return ONLY the map as a JSON array of strings, with no additional text.\n        Example format for a 5x5 map:\n        [\"BBBBB\", \"B...B\", \"B.E.B\", \"B.P.B\", \"BBBBB\"]\n        ", "map": "BBBBBBBBBBBBBBBBBBBB\nB.P...............EB\nB..................B\nB....B.............B\nB....B.............B\nB...........E......B\nB...............E..B\nB....B....B........B\nB....B.............B\nB.................EB\nB.............B....B\nB.......E.....B....B\nB.................EB\nB....B.............B\nB....B.............B\nB..................B\nB.......E..........B\nB.................EB\nB..................B\nBBBBBBBBBBBBBBBBBBBB"}
